# -*- coding: utf-8 -*-
"""Untitled17.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eXC7zJPr4XJ4uHj5cjOkW1G50y_8Vbj-
"""

# ==========================================================
# 🧱 STEP 6: JOB DETAILS FORM (AI + Editable Form)
# ==========================================================
st.markdown("---")
st.subheader("3️⃣ Job Details Form")

def init_form_state():
    """Inisialisasi form agar bisa diedit (pakai session_state)."""
    if "job_details" not in st.session_state:
        st.session_state.job_details = {
            "responsibilities": [],
            "work_inputs": [],
            "work_outputs": [],
            "qualifications": [],
            "competencies": [],
        }

def parse_ai_profile_to_form(ai_text):
    """Ekstrak bagian penting dari teks AI jadi list default."""
    sections = {
        "responsibilities": [],
        "work_inputs": [],
        "work_outputs": [],
        "qualifications": [],
        "competencies": []
    }

    lines = ai_text.split("\n")
    current_section = None

    for line in lines:
        line = line.strip()
        if not line:
            continue

        if "requirement" in line.lower():
            current_section = "qualifications"
        elif "description" in line.lower() or "responsibilit" in line.lower():
            current_section = "responsibilities"
        elif "competenc" in line.lower() or "skill" in line.lower():
            current_section = "competencies"
        else:
            if current_section:
                clean = line.lstrip("•-–1234567890. ").strip()
                if clean:
                    sections[current_section].append(clean)

    return sections

# --- tampilkan form kalau sudah ada hasil AI ---
if "ai_job_profile" not in st.session_state:
    st.info("⚠️ Jalankan dulu 'Generate Job Profile' untuk isi form otomatis.")
else:
    init_form_state()

    # Prefill otomatis hanya jika belum pernah diisi
    if not any(st.session_state.job_details.values()):
        st.session_state.job_details = parse_ai_profile_to_form(
            st.session_state["ai_job_profile"]
        )

    st.caption("Form ini sudah terisi otomatis dari hasil AI Job Profile. Kamu bisa menambah/menghapus item sesuai kebutuhan.")

    # tampilkan tiap section dengan tombol Add/Remove
    for section, label in {
        "responsibilities": "🧩 Key Responsibilities",
        "work_inputs": "📥 Work Inputs",
        "work_outputs": "📤 Work Outputs",
        "qualifications": "🎓 Qualifications",
        "competencies": "💡 Competencies"
    }.items():
        st.write(f"**{label}**")

        items = st.session_state.job_details.get(section, [])

        # tampilkan tiap item
        for i, val in enumerate(items):
            cols = st.columns([8, 1])
            with cols[0]:
                new_val = st.text_input(f"{label} #{i+1}", value=val, key=f"{section}_{i}")
                st.session_state.job_details[section][i] = new_val
            with cols[1]:
                if st.button("❌", key=f"remove_{section}_{i}"):
                    st.session_state.job_details[section].pop(i)
                    st.experimental_rerun()

        # tombol add item
        if st.button(f"➕ Add {label}", key=f"add_{section}"):
            st.session_state.job_details[section].append("")
            st.experimental_rerun()

        st.markdown("---")

    # tombol save ke Supabase
    if st.button("💾 Save Job Details"):
        try:
            data_insert = {
                "role_name": selected_role,
                "job_level": selected_job_level,
                "responsibilities": json.dumps(st.session_state.job_details["responsibilities"]),
                "work_inputs": json.dumps(st.session_state.job_details["work_inputs"]),
                "work_outputs": json.dumps(st.session_state.job_details["work_outputs"]),
                "qualifications": json.dumps(st.session_state.job_details["qualifications"]),
                "competencies": json.dumps(st.session_state.job_details["competencies"]),
                "created_at": datetime.now().isoformat()
            }
            supabase.table("job_details").insert(data_insert).execute()
            st.success("✅ Job Details berhasil disimpan ke Supabase!")
        except Exception as e:
            st.error(f"Gagal menyimpan ke Supabase: {e}")
